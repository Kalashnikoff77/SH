<MudDialog Style="width:450px; min-width:360px">
    <DialogContent>
        <MudStack AlignItems="AlignItems.Center" Class="mb-3">
            <MudCarousel @ref="Carousel" TData="PhotosForEventsDto" ShowArrows ShowBullets AutoCycle Style="width:300px; height:400px">
                @foreach(var photo in Event.Photos) 
                {
                    <MudCarouselItem Transition="Transition.Slide">
                        <MudImage Src=@($"/images/EventsPhotos/{photo.EventId}/{photo.Guid}/{EnumImageSize.s450x600}.jpg") Fluid="true" Style="border-radius:2%" />
                    </MudCarouselItem>
                }
            </MudCarousel>

            @if (CurrentState.Account != null)
            {
                <MudButton Color="Color.Info" Size="Size.Small" StartIcon="@Icons.Material.Outlined.HowToReg" Variant="Variant.Outlined">Регистрация</MudButton>
            }
        </MudStack>

    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Info" OnClick="Submit">Закрыть</MudButton>
    </DialogActions>
</MudDialog>


@code {
    [CascadingParameter] CurrentState CurrentState { get; set; } = null!;
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = null!;
    [Parameter] public EventsViewDto Event { get; set; } = null!;

    MudCarousel<PhotosForEventsDto> Carousel = null!;

    void Submit() => MudDialog.Close(DialogResult.Ok(true));
}

