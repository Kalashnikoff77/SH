@page "/events/add"
@page "/events/edit/{EventId:int}"

@if (EventId != null)
{
    <PageTitle>Редактирование "@Event.Name"</PageTitle>
}
else
{
    <PageTitle>Добавление мероприятия</PageTitle>
}

@if (CurrentState?.Account != null)
{
    <MudStack Style="min-width:300px; max-width:750px" Class="ml-3">

        @if (EventId != null)
        {
            <MudText Typo="Typo.h6" Class="mb-3">Редактирование "@Event.Name"</MudText>
        }
        else
        {
            <MudText Typo="Typo.h6" Class="mb-3">Добавление мероприятия</MudText>
        }

        <MudDivider DividerType="DividerType.FullWidth" Light="false" Class="mb-5" />

        <MudExpansionPanels MultiExpansion="true" Elevation="3">

            @* ОБЩИЕ *@
            <MudExpansionPanel Expanded="true">
                <TitleContent>
                    <div class="d-flex">
                        <MudIcon Color="IsPanel1Valid ? Color.Success : Color.Default" Icon="@Icons.Material.Filled.Settings" class="mr-3" />
                        <MudText Color="IsPanel1Valid ? Color.Success : Color.Default"><b>1. ОБЩИЕ ДАННЫЕ</b></MudText>
                    </div>
                </TitleContent>
                <ChildContent>
                    <MudGrid>
                        <MudItem sm="12" xs="12">
                            <MudTextField @bind-Value="Event.Name"
                                          Validation="@(new Func<string?, Task<string?>>(NameValidator))"
                                          HelperText="Пример: Тематическая вечеринка FreeLove"
                                          Label="Название мероприятия"
                                          AdornmentIcon="@Icons.Material.Outlined.ShortText" AdornmentColor="@NameIconColor" Adornment="Adornment.End"
                                          Typo="Typo.body1" Margin="Margin.Normal" Variant="Variant.Outlined" MaxLength="StaticData.DB_EVENT_NAME_MAX" />
                            <MudTextField @bind-Value="Event.Description"
                                          Validation="@(new Func<string?, string?>(DescriptionValidator))"
                                          HelperText="Правила, программа и особенности встречи"
                                          Label="Описание мероприятия"
                                          Lines="3" MaxLines="5"
                                          AdornmentIcon="@Icons.Material.Outlined.Info" AdornmentColor="@DescriptionIconColor" Adornment="Adornment.End"
                                          Class="mt-7"
                                          Typo="Typo.body1" Margin="Margin.Normal" Variant="Variant.Outlined" MaxLength="StaticData.DB_EVENT_DESCRIPTION_MAX" />
                        </MudItem>

                        <MudItem sm="4" xs="4" Class="pt-2">
                            <MudNumericField @bind-Value="Event.MaxPairs"
                                             Validation="@(new Func<short?, string?>(MaxPairsValidator))"
                                             HelperText="Максимальное кол-во пар"
                                             AdornmentIcon="@Icons.Material.Filled.PeopleAlt" Adornment="Adornment.End" AdornmentColor="@MaxPairsIconColor"
                                             Typo="Typo.body1" Margin="Margin.Dense" Variant="Variant.Outlined" />
                        </MudItem>
                        <MudItem sm="4" xs="4" Class="pt-2">
                            <MudNumericField @bind-Value="Event.MaxMen"
                                             Validation="@(new Func<short?, string?>(MaxMenValidator))"
                                             HelperText="Максимальное кол-во мужчин"
                                             AdornmentIcon="@Icons.Material.Filled.Face5" Adornment="Adornment.End" AdornmentColor="@MaxMenIconColor"
                                             Typo="Typo.body1" Margin="Margin.Dense" Variant="Variant.Outlined" />
                        </MudItem>
                        <MudItem sm="4" xs="4" Class="pt-2">
                            <MudNumericField @bind-Value="Event.MaxWomen"
                                             Validation="@(new Func<short?, string?>(MaxWomenValidator))"
                                             HelperText="Максимальное кол-во женщин"
                                             AdornmentIcon="@Icons.Material.Filled.Face3" Adornment="Adornment.End" AdornmentColor="@MaxWomenIconColor"
                                             Typo="Typo.body1" Margin="Margin.Dense" Variant="Variant.Outlined" />
                        </MudItem>

                        <MudItem sm="6" xs="12" Class="pt-3">
                            <MudStack Spacing="0">
                                <MudAutocomplete AdornmentIcon="@Icons.Material.Outlined.LocationOn" AdornmentColor="@CountryIconColor" Validation="@(new Func<string, string?>(CountryValidator))" T="string" Label="Страна" @bind-Value="countryText" SearchFunc="@SearchCountry" ResetValueOnEmptyText="true" CoerceText="true" CoerceValue="false" />
                            </MudStack>
                        </MudItem>
                        <MudItem sm="6" xs="12" Class="pt-3">
                            <MudStack Spacing="0">
                                <MudAutocomplete AdornmentIcon="@Icons.Material.Outlined.LocationOn" AdornmentColor="@RegionIconColor" Validation="@(new Func<string, string?>(RegionValidator))" T="string" Label="Регион" @bind-Value="regionText" SearchFunc="@SearchRegion" ResetValueOnEmptyText="true" CoerceText="true" CoerceValue="false" Disabled="countryText == null ? true : false" />
                            </MudStack>
                        </MudItem>

                        <MudItem sm="12" Class="pt-5">
                            <MudTextField @bind-Value="Event.Address"
                                          Validation="@(new Func<string?, string?>(AddressValidator))"
                                          HelperText="Пример: МО, пос. Каменка, ул. Центральная, д. 20"
                                          Label="Точный или примерный адрес мероприятия"
                                          AdornmentIcon="@Icons.Material.Outlined.ShortText" AdornmentColor="@AddressIconColor" Adornment="Adornment.End"
                                          Typo="Typo.body1" Margin="Margin.Normal" Variant="Variant.Outlined" MaxLength="StaticData.DB_EVENT_ADDRESS_MAX" />
                        </MudItem>

                    </MudGrid>
                </ChildContent>
            </MudExpansionPanel>


            @* РАСПИСАНИЕ *@
            <MudExpansionPanel Disabled="!IsPanel1Valid" Expanded="IsPanel1Valid">
                <TitleContent>
                    <div class="d-flex">
                        <MudIcon Color="IsPanel2Valid ? Color.Success : Color.Default" Icon="@Icons.Material.Filled.CalendarMonth" class="mr-3" />
                        <MudText Color="IsPanel2Valid ? Color.Success : Color.Default"><b>2. РАСПИСАНИЕ</b></MudText>
                    </div>
                </TitleContent>

                <ChildContent>
                    <MudDataGrid T="SchedulesForEventsViewDto" Items="@Event.Schedule?.Where(x => x.IsDeleted == false)" HeaderClass="dataGridHideTHead" Elevation="0" Striped Hover Bordered>
                        <Columns>
                            <TemplateColumn CellClass="py-3">
                                <CellTemplate>
                                    <MudStack StretchItems="StretchItems.Start" AlignItems="AlignItems.Center" Spacing="0" Row >
                                        <MudStack Spacing="0">
                                            <MudStack Row AlignItems="AlignItems.Center" Spacing="2">
                                                <MudIcon Icon="@Icons.Material.Outlined.CalendarToday" Class="@context.Item.ToDateClass()" Style="font-size:17px" />
                                                <MudText Typo="Typo.subtitle1" Align="Align.Left"><b>@context.Item.ToStartEndString()</b></MudText>
                                            </MudStack>
                                            <MudText Align="Align.Left" Style="font-size:13px">@context.Item.Description</MudText>
                                            <MudStack Row AlignItems="AlignItems.Center" Spacing="1" Style="font-size:13px">
                                                <MudIcon Icon="@Icons.Material.Filled.PeopleAlt" Color="Color.Tertiary" Style="font-size:17px" />@(context.Item.CostPair == 0 ? "Бесплатно" : context.Item.CostPair.ToString() + " руб.")
                                                <MudIcon Icon="@Icons.Material.Filled.Face5" Color="Color.Primary" Style="font-size:16px" Class="ml-2" />@(context.Item.CostMan == 0 ? "Бесплатно" : context.Item.CostMan.ToString() + " руб.")
                                                <MudIcon Icon="@Icons.Material.Filled.Face3" Color="Color.Error" Style="font-size:15px" Class="ml-2" />@(context.Item.CostWoman == 0 ? "Бесплатно" : context.Item.CostWoman.ToString() + " руб.")
                                            </MudStack>
                                            @if (context.Item.Features != null)
                                            {
                                                <MudStack Row Wrap="Wrap.Wrap" Spacing="2" Class="mt-1">
                                                    @foreach (var feature in context.Item.Features.OrderBy(o => o.Name))
                                                    {
                                                        <span style="padding: 0 5px 0 5px; font-size:12px; font-weight:500; opacity:0.6; border-width:1px; border-style:dotted">@feature.Name</span>
                                                    }
                                                </MudStack>
                                            }
                                        </MudStack>
                                    </MudStack>
                                </CellTemplate>
                            </TemplateColumn>

                            <TemplateColumn CellStyle="width:90px">
                                <CellTemplate>
                                    <MudStack Row Spacing="2">
                                        <MudIconButton Size="@Size.Small" title="Редактировать расписание" Icon="@Icons.Material.Outlined.Edit" Color="Color.Primary" OnClick="async () => await EditScheduleDialogAsync(context.Item)" />
                                        <MudIconButton Size="@Size.Small" title="Удалить расписание" Icon="@Icons.Material.Outlined.Delete" Color="Color.Error" OnClick="async () => await DeleteScheduleDialogAsync(context.Item)" />
                                    </MudStack>
                                </CellTemplate>
                            </TemplateColumn>
                        </Columns>
                    </MudDataGrid>

                    <MudStack AlignItems="AlignItems.End">
                        <MudButton StartIcon="@Icons.Material.Outlined.Add" ButtonType="ButtonType.Button" Color="Color.Primary" Size="Size.Small" Variant="Variant.Filled" OnClick="AddScheduleDialogAsync" Class="mt-5">Добавить</MudButton>
                    </MudStack>
                </ChildContent>

            </MudExpansionPanel>


            @* ФОТО *@
            <MudExpansionPanel Disabled="!(IsPanel1Valid && IsPanel2Valid)" Expanded="(IsPanel1Valid && IsPanel2Valid)">
                <TitleContent>
                    <div class="d-flex">
                        <MudIcon Color="IsPanel3Valid ? Color.Success : Color.Default" Icon="@Icons.Material.Filled.Image" class="mr-3" />
                        <MudText Color="IsPanel3Valid ? Color.Success : Color.Default"><b>3. ФОТОГРАФИИ</b></MudText>
                    </div>
                </TitleContent>
                <ChildContent>
                    <MudStack Row Justify="Justify.Center" class="mb-5">
                        @if (Event.Photos?.Count(x => x.IsDeleted == false) >= 20)
                        {
                            <MudButton Disabled Size="Size.Small" Variant="Variant.Outlined" Color="Color.Primary" StartIcon="@Icons.Material.Sharp.Upload">
                                <MudText>Загружено макс. кол-во фото (20 шт.)</MudText>
                            </MudButton>
                        }
                        else
                        {
                            <MudFileUpload T="IReadOnlyList<IBrowserFile>" MaximumFileCount="255" Accept=".jpg,.jpeg,.png" FilesChanged="UploadPhotos">
                                <ActivatorContent>
                                    <MudButton Disabled="processingPhoto" Size="Size.Small" Variant="Variant.Outlined" Color="Color.Primary" StartIcon="@Icons.Material.Sharp.Upload">
                                        @if (processingPhoto)
                                        {
                                            <MudProgressCircular Size="Size.Small" Indeterminate />
                                            <MudText Class="ms-2">Обработка фото...</MudText>
                                        }
                                        else
                                        {
                                            <MudText>Добавить фотографии (макс. 20 шт.)</MudText>
                                        }
                                    </MudButton>
                                </ActivatorContent>
                            </MudFileUpload>
                        }
                    </MudStack>

                    @if (Event.Photos?.Count > 0)
                    {
                        <MudStack Row Wrap="Wrap.Wrap" Spacing="0" Justify="Justify.SpaceEvenly">
                            @foreach (var photo in Event.Photos.Where(w => w.IsDeleted == false).OrderByDescending(o => o.IsAvatar).ThenByDescending(o => o.CreateDate))
                            {
                                <MudPaper Outlined class="pa-3 mb-8" style="@("max-width:274px; " + (photo.IsAvatar ? "background-color:#EDFFEE" : null))">
                                    <MudImage Width="250" Height="250" Src="@($"/images/" + (photo.Id == 0 ? "temp" : $"EventsPhotos/{Event.Id}") + $"/{photo.Guid}/{EnumImageSize.s250x250}.jpg")" Class="mb-2" />
                                    <MudStack Row>
                                        <MudTextField T="string" Value="@photo.Comment" ValueChanged="@((c) => UpdateCommentPhoto(photo, c))" Label="Описание" Variant="Variant.Text" />
                                        <MudMenu Icon="@Icons.Material.Filled.MoreVert" Size="Size.Small" AnchorOrigin="Origin.BottomLeft" TransformOrigin="Origin.TopCenter" Dense>
                                            <MudMenuItem Disabled="@photo.IsAvatar" OnClick="@(() => SetAsAvatarPhoto(photo))" Icon="@Icons.Material.Filled.Portrait">Установить как аватар</MudMenuItem>
                                            <MudMenuItem Disabled="@photo.IsAvatar" OnClick="@(() => DeletePhoto(photo))" IconColor="Color.Error" Icon="@Icons.Material.Outlined.Delete">Удалить</MudMenuItem>
                                        </MudMenu>
                                    </MudStack>
                                </MudPaper>
                            }
                        </MudStack>
                    }

                </ChildContent>
            </MudExpansionPanel>

        </MudExpansionPanels>

        
        @* КНОПКА СОХРАНЕНИЯ *@
        <MudStack AlignItems="AlignItems.Center" Class="mt-5" Row="false">
            @if (EventId == null)
            {
                <MudButton OnClick="AddAsync" StartIcon="@Icons.Material.Outlined.Add" Disabled="!(IsPanel1Valid && IsPanel2Valid && IsPanel3Valid && !processingEvent)" Variant="Variant.Filled" Size="Size.Large" Color="Color.Primary" Style="margin:auto">
                    @if (processingEvent)
                    {
                        <MudProgressCircular Size="Size.Small" Style="margin:auto" Indeterminate="true" />
                        <MudText Class="ms-2">Добавляем...</MudText>
                    }
                    else
                    {
                        <MudText>Добавить мероприятие</MudText>
                    }
                </MudButton>
            }
            else
            {
                <MudButton OnClick="UpdateAsync" StartIcon="@Icons.Material.Outlined.Save" Disabled="!(IsPanel1Valid && IsPanel2Valid && IsPanel3Valid && !processingEvent)" Variant="Variant.Filled" Size="Size.Large" Color="Color.Primary" Style="margin:auto">
                    @if (processingEvent)
                    {
                        <MudProgressCircular Size="Size.Small" Style="margin:auto" Indeterminate="true" />
                        <MudText Class="ms-2">Сохраняем...</MudText>
                    }
                    else
                    {
                        <MudText>Сохранить изменения</MudText>
                    }
                </MudButton>
            }
        </MudStack>

    </MudStack>
}

