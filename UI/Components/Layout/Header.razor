@inject TooltipService tooltipService
@inject DialogService DialogService
<RadzenComponents @rendermode="InteractiveAuto" />

<RadzenHeader Style="height: 61px">
    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" class="rz-mr-1">
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Style="height: 61px">
            <RadzenSidebarToggle Click="@(() => sidebarExpanded = !sidebarExpanded)" />
            <p>Логотип</p>
        </RadzenStack>
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="10">
            @if (CurrentState.Account != null)
            {
                <RadzenButton Click=OpenNotificationsWindow ButtonStyle="ButtonStyle.Secondary" class="rz-p-2" Style="border-radius: 15%" MouseEnter="@(args => ShowTooltip(args, new TooltipOptions(){ Text = "Уведомления", Delay=500 }))">
                    <RadzenIcon Icon="notifications" />
                    <span class="sw-header-UnreadNotificationsNumber IsHidden" />
                </RadzenButton>
                <RadzenButton ButtonStyle="ButtonStyle.Secondary" class="rz-p-2" Style="border-radius: 15%" MouseEnter="@(args => ShowTooltip(args, new TooltipOptions(){ Text = "Сообщения", Delay=500 }))">
                    <RadzenIcon Icon="mail" />
                    <span class="sw-header-UnreadMessagesNumber IsHidden" />
                </RadzenButton>

                <RadzenProfileMenu Click="MenuClickAsync">
                    <Template>
                        <ImageAvatar Account="@CurrentState.Account" Size="@EnumImageSize.s64x64" Class="s35" />
                    </Template>
                    <ChildContent>
                        <RadzenProfileMenuItem Text="Настройки" Path="accountsettings" Icon="settings" />
                        <RadzenProfileMenuItem Text="Выйти" Icon="logout" />
                    </ChildContent>
                </RadzenProfileMenu>
            }
        </RadzenStack>
    </RadzenStack>
</RadzenHeader>

<RadzenSidebar Responsive="true" Style="width: max-content">
    <RadzenPanelMenu DisplayStyle="@(sidebarExpanded ? MenuItemDisplayStyle.IconAndText : MenuItemDisplayStyle.Icon)" ShowArrow="true">
        <RadzenPanelMenuItem Text="Главная" Path="/" Icon="home" />
        <RadzenPanelMenuItem Text="Сообщения" Path="/messages" Icon="mail" Visible="CurrentState.Account != null" />
        <RadzenPanelMenuItem Text="Мероприятия" Path="/events" Icon="group" />
        <RadzenPanelMenuItem Text="Войти" Path="/login" Icon="login" Visible="CurrentState.Account == null" />
        <RadzenPanelMenuItem Text="Выйти" Icon="logout" Click="async () => { await CurrentState.LogOutAsync(); }" Visible="CurrentState.Account != null" />
    </RadzenPanelMenu>
</RadzenSidebar>

