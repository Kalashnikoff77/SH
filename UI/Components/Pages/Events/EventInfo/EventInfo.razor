@page "/events/{EventId:int}"

@if (Event != null) 
{
    <PageTitle>@Event.Name</PageTitle>

    <div class="d-flex flex-column align-center ml-3" Style="min-width:300px; max-width:750px">

        <MudText Align="Align.Center" Typo="Typo.h6">@Event.Name</MudText>
        <MudDivider DividerType="DividerType.FullWidth" Light="false" Class="mb-5" />

        <div class="d-flex flex-column mb-3 align-center">
            <MudCarousel @ref="Carousel" TData="PhotosForEventsDto" ShowArrows ShowBullets="false" AutoCycle Style="width:300px; height:400px">
                @if (Event.Photos != null)
                {
                    @foreach (var photo in Event.Photos.OrderByDescending(o => o.IsAvatar).ThenByDescending(o => o.CreateDate))
                    {
                        <MudCarouselItem Transition="Transition.Slide">
                            <MudImage Src=@($"/images/EventsPhotos/{photo.RelatedId}/{photo.Guid}/{EnumImageSize.s450x600}.jpg") Fluid Style="border-radius:2%" />
                        </MudCarouselItem>
                    }
                }
            </MudCarousel>
        </div>


        <MudStack Spacing="2" Row Justify="Justify.Center" AlignItems="AlignItems.Center" Style="text-align:center; width:500px">
            @if (scheduleDates != null)
            {
                <MudSelect T="SchedulesDatesViewDto" Value="selectedSchedule" ValueChanged="ScheduleChangedAsync" Variant="Variant.Outlined" Dense AnchorOrigin="Origin.BottomCenter" Margin="Margin.Dense" Label="Расписание" AdornmentIcon="@Icons.Material.Outlined.CalendarMonth">
                    @foreach (var schedule in scheduleDates)
                    {
                        <MudSelectItem Value="@schedule" />
                    }
                </MudSelect>
            }

            @if (CurrentState.Account != null && ScheduleForEventView != null)
            {
                @if (CurrentState.Account.Schedules != null && CurrentState.Account.Schedules.Any(a => a.ScheduleId == ScheduleForEventView.Id))
                {
                    <MudButton OnClick="() => ShowDialogs.CancelRegistrationForEventDialogAsync(ScheduleForEventView)" Style="height:39px; margin:2px 3px 0 0; padding: 0 20px" Color="Color.Primary" IconSize="Size.Large" Size="Size.Small" StartIcon="@Icons.Material.Outlined.GroupRemove" Variant="Variant.Filled" title="Отменить регистрацию">Отменить</MudButton>
                }
                else
                {
                    <MudButton OnClick="() => ShowDialogs.RegistrationForEventDialogAsync(ScheduleForEventView)" Style="height:39px; margin:2px 3px 0 0; padding: 0 20px" Color="Color.Primary" IconSize="Size.Large" Size="Size.Small" StartIcon="@Icons.Material.Outlined.GroupAdd" Variant="Variant.Outlined" title="Зарегистрироваться на мероприятие">Регистрация</MudButton>
                }
            }
        </MudStack>

    </div>
}
