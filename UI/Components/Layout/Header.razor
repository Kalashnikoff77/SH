@inject TooltipService tooltipService
<RadzenComponents @rendermode="InteractiveAuto" />

<RadzenHeader Style="height: 61px">
    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" class="rz-mr-1">
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Style="height: 61px">
            <RadzenSidebarToggle Click="@(() => sidebarExpanded = !sidebarExpanded)" />
            <p>Логотип</p>
        </RadzenStack>
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="10">
            @if (CurrentState.Account != null)
            {
                <RadzenButton ButtonStyle="ButtonStyle.Info" MouseEnter="@(args => ShowTooltip(args, new TooltipOptions(){ Text = "Уведомления", Position = TooltipPosition.Bottom }))">
                    <RadzenIcon Icon="notifications" />
                </RadzenButton>
                <RadzenButton ButtonStyle="ButtonStyle.Info" MouseEnter="@(args => ShowTooltip(args, new TooltipOptions(){ Text = "Сообщения", Position = TooltipPosition.Bottom }))">
                    <RadzenIcon Icon="mail" />
                </RadzenButton>

                <RadzenProfileMenu>
                    <Template>
                        <ImageAvatar Account="@CurrentState.Account" Size="@EnumImageSize.s64x64" Class="s45" />
                    </Template>
                    <ChildContent>
                        <RadzenProfileMenuItem Text="Menu" Path="menu" Icon="line_weight"></RadzenProfileMenuItem>
                        <RadzenProfileMenuItem Text="FileInput" Path="fileinput" Icon="attach_file"></RadzenProfileMenuItem>
                        <RadzenProfileMenuItem Text="Dialog" Path="dialog" Icon="perm_media"></RadzenProfileMenuItem>
                        <RadzenProfileMenuItem Text="Notification" Path="notification" Icon="announcement"></RadzenProfileMenuItem>
                        <RadzenProfileMenuItem Text="Выйти" Icon="logout"></RadzenProfileMenuItem>
                    </ChildContent>
                </RadzenProfileMenu>
            }
        </RadzenStack>
    </RadzenStack>
</RadzenHeader>

<RadzenSidebar Responsive="false" Style="width: max-content">
    <RadzenPanelMenu DisplayStyle="@(sidebarExpanded ? MenuItemDisplayStyle.IconAndText : MenuItemDisplayStyle.Icon)" ShowArrow="false">
        <RadzenPanelMenuItem Text="Главная" Path="/" Icon="home" />
        @if (CurrentState.Account != null)
        {
            <RadzenPanelMenuItem Text="Сообщения" Path="/messages" Icon="mail" />
        }

        <RadzenPanelMenuItem Text="Встречи" Path="/events" Icon="group" />

        @if (CurrentState.Account == null)
        {
            <RadzenPanelMenuItem Text="Войти" Path="/login" Icon="login" />
        }
        else
        {
            <RadzenPanelMenuItem Text="Выйти" Icon="logout" Click="async () => { await CurrentState.LogOutAsync(); }" />
        }
    </RadzenPanelMenu>
</RadzenSidebar>

@code {
    bool sidebarExpanded = true;

    void ShowTooltip(ElementReference elementReference, TooltipOptions? options = null) => 
        tooltipService.Open(elementReference, options?.Text, options);

    [CascadingParameter] CurrentState CurrentState { get; set; } = null!;
}